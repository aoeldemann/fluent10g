#!/bin/bash
# The MIT License
#
# Copyright (c) 2017-2019 by the author(s)
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#
# Author(s):
#   - Andreas Oeldemann <andreas.oeldemann@tum.de>
#
# Description:
#
# Script to build/run measurement application in docker container

function usage {
  echo "Usage: $0 build|run <source_files>"
}

# operation mode specified?
if [ -z "$1" ]; then
  usage
  exit -1
fi

# valid operation mode?
if [ "$1" != "build" ] && [ "$1" != "run" ]; then
  usage
  exit -1
fi


# source files specified?
if [ -z "$2" ]; then
  usage
  exit -1
fi

mode=$1
shift
sources=$@

# loop over all source files
numsources=${#sources[@]}
let numsources=numsources-1
for i in $(seq 0 $numsources); do
  spath=$(realpath ${sources[$i]})
  # check if source file is in pwd
  if [[ $spath != $PWD* ]]; then
    echo "ERROR: source file not in current path"
    exit -1
  fi
  # strip off pwd
  sources[$i]=${sources[$i]#$PWD/}
done

# make sure xdma driver is loaded
if ! lsmod | grep "xdma" &> /dev/null; then
  echo "ERROR: xdma driver is not loaded!"
  exit -1
fi

# make sure xdma devices exist
if [ ! -c "/dev/xdma0_c2h_0" ]; then
  echo "ERROR: dma device '/dev/xdma0_c2h_0' does not exist!"
  exit -1
fi
if [ ! -c "/dev/xdma0_h2c_0" ]; then
  echo "ERROR: dma device '/dev/xdma0_h2c_0' does not exist!"
  exit -1
fi

docker run -it --rm -v "$PWD":/fluent10g --privileged \
  aoeldemann/fluent10g:latest go $mode $sources
